package ru.vsu.cs.course1;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.Scanner;

public class FormMain extends JFrame {
    private JPanel panelMain;
    private JButton button1;
    private JLabel label1;
    private JTextArea textArea1;
    private JTextArea textArea2;

    public FormMain() throws IOException {
        ArrayList<Integer> array = new ArrayList<>();
        this.setTitle("task 2");
        this.setContentPane(panelMain);
        this.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        this.pack();
        ///DefaultListModel model1 = (DefaultListModel) list1.getModel();
        // model.add(0, "test");


        button1.addActionListener(e ->
        {


            MyPriorityQueue<Integer> queue = new MyPriorityQueue<>(Comparator.comparing(Integer::new));
            MyPriorityQueue<Integer> q2 = new MyPriorityQueue<>(Comparator.comparing(Integer::new));
            queue.offer(4);
            queue.offer(2);
            queue.offer(7);
            queue.offer(3);
            queue.offer(6);
            int node, k = 0, size = queue.size();
            int mas[] = new int[size];

            //String s = "", s2 = "";
            textArea1.setText(queue.toString());
            for (int i = 0; i < size; i++) {
                node = queue.poll();
                //s += node + " ";
                // System.out.println(node);
                if (node % 2 == 0) {
                    mas[k] = node;
                    k++;
                }
            }
           // textArea1.setText(s);
            for (int i = 0; i < k; i++)
                queue.offer(mas[i]);
             //System.out.println("Size: " + queue.size() + "; queue: " + queue);
            //for (int i = 0; i <= queue.size(); i++) {
            //    node = queue.poll();
            //    s2 += node + " ";
          // }
            textArea2.setText(queue.toString());
        });
    }


    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panelMain = new JPanel();
        panelMain.setLayout(new GridLayoutManager(4, 2, new Insets(10, 10, 10, 10), 10, 10));
        button1 = new JButton();
        button1.setText("Заполнить из текстового поля");
        panelMain.add(button1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(454, 30), null, 0, false));
        label1 = new JLabel();
        label1.setText("");
        panelMain.add(label1, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textArea1 = new JTextArea();
        textArea1.setText("");
        panelMain.add(textArea1, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 10), null, 0, false));
        textArea2 = new JTextArea();
        panelMain.add(textArea2, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 10), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panelMain;
    }


}



